// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique
  password  String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Circuit {
  id           String         @id @default(cuid())
  title        String
  duration     String
  price        String
  maxPeople    Int
  difficulty   String
  description  String
  highlights   Highlight[]    // Tableau de points forts
  included     Included[]     // Tableau inclus
  notIncluded  NotIncluded[]  // Tableau non inclus
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  itineraries  Itinerary[]    // Relation avec Itinerary
  reservations Reservation[]  // Relation avec Reservation (nouvelle relation)

  @@map("circuits")
}

model Itinerary {
  id               String   @id @default(cuid())
  day              Int
  title            String
  description      String
  image            String
  imageDescription String
  circuitId        String
  circuit          Circuit  @relation(fields: [circuitId], references: [id], onDelete: Cascade)

  @@map("itineraries")
}

model Highlight {
  id        String   @id @default(cuid())
  text      String
  circuitId String
  circuit   Circuit  @relation(fields: [circuitId], references: [id], onDelete: Cascade)

  @@map("highlights")
}

model Included {
  id        String   @id @default(cuid())
  text      String
  circuitId String
  circuit   Circuit  @relation(fields: [circuitId], references: [id], onDelete: Cascade)

  @@map("included")
}

model NotIncluded {
  id        String   @id @default(cuid())
  text      String
  circuitId String
  circuit   Circuit  @relation(fields: [circuitId], references: [id], onDelete: Cascade)

  @@map("not_included")
}

model Reservation {
  id          String   @id @default(cuid())
  circuitId   String   // Nouveau champ pour la relation
  nom         String
  prenom      String
  email       String
  telephone   String
  address     String
  personnes   Int
  startDate   DateTime
  endDate     DateTime
  duration    Int
  preferences String
  status      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  circuitRel  Circuit? @relation(fields: [circuitId], references: [id], onDelete: Cascade) // Relation

  @@map("reservations") // Changé de "reservation" à "reservations" pour plus de cohérence
}